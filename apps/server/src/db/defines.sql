CREATE SCHEMA IF NOT EXISTS app;

CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TYPE app.role AS ENUM ('USER', 'ADMIN');

CREATE TABLE IF NOT EXISTS app.USER (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  email VARCHAR(50) NOT NULL UNIQUE,
  user_role app.role DEFAULT 'USER',
  password VARCHAR(255) NOT NULL CHECK (length(password) > 0)
);

CREATE TABLE IF NOT EXISTS app.CHARACTER (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE,
  description TEXT
);

CREATE TABLE IF NOT EXISTS app.VOTES(
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  user_id UUID REFERENCES app.USER(id) ON DELETE CASCADE ON UPDATE CASCADE,
  character_id UUID REFERENCES app.CHARACTER(id) ON DELETE CASCADE ON UPDATE CASCADE,
  vote_value INT NOT NULL CHECK (vote_value >= 0)
);

CREATE TABLE IF NOT EXISTS app.COMMENTS(
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  user_id UUID REFERENCES app.USER(id) ON DELETE CASCADE ON UPDATE CASCADE,
  votes_id UUID REFERENCES app.VOTES(id) ON DELETE CASCADE ON UPDATE CASCADE,
  comment TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS app.CLIENT(
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  birth_day DATE NOT NULL,
  address VARCHAR(50) NOT NULL,
  user_id UUID REFERENCES app.USER(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS app.ADMIN(
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  birth_day DATE NOT NULL,
  address VARCHAR(50) NOT NULL,
  user_id UUID REFERENCES app.USER(id) ON DELETE CASCADE ON UPDATE CASCADE,
  phone_number VARCHAR(50) NOT NULL
);
